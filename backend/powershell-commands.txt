Get installed apps module: https://github.com/gangstanthony/PowerShell/blob/master/Get-InstalledApps.ps1
Installation Steps:
- downlaod file
- `Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass`
- `import-Module ".\Get-InstalledApps.ps1"
- `Get-InstalledApps -ComputerName $env:ComputerName

Alternative:
Command: `Get-WmiObject -Class Win32_Product | select Name, version`

Other better commands:

$InstalledSoftware = Get-ChildItem "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall"
foreach($obj in $InstalledSoftware){write-host $obj.GetValue('DisplayName') -NoNewline; write-host " - " -NoNewline; write-host $obj.GetValue('DisplayVersion')}

gives list of apps installed in local machine

$InstalledSoftware = Get-ChildItem "HKCU:\Software\Microsoft\Windows\CurrentVersion\Uninstall"
foreach($obj in $InstalledSoftware){write-host $obj.GetValue('DisplayName') -NoNewline; write-host " - " -NoNewline; write-host $obj.GetValue('DisplayVersion')}

this commands gives list of apps installed by current users


$list=@()
$InstalledSoftwareKey=”SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall”
$InstalledSoftware=[microsoft.win32.registrykey]::OpenRemoteBaseKey(‘LocalMachine’,$pcname)
$RegistryKey=$InstalledSoftware.OpenSubKey($InstalledSoftwareKey)
$SubKeys=$RegistryKey.GetSubKeyNames()
Foreach ($key in $SubKeys){
$thisKey=$InstalledSoftwareKey+”\\”+$key
$thisSubKey=$InstalledSoftware.OpenSubKey($thisKey)
$obj = New-Object PSObject
$obj | Add-Member -MemberType NoteProperty -Name “ComputerName” -Value $pcname
$obj | Add-Member -MemberType NoteProperty -Name “DisplayName” -Value $($thisSubKey.GetValue(“DisplayName”))
$obj | Add-Member -MemberType NoteProperty -Name “DisplayVersion” -Value $($thisSubKey.GetValue(“DisplayVersion”))
$list += $obj
}
$list | where { $_.DisplayName -like “mozilla*”} | select ComputerName, DisplayName, DisplayVersion | FT